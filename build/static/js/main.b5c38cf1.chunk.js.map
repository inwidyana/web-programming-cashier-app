{"version":3,"sources":["40621.jpg","redux/reducers/items.js","redux/reducers/cart.js","redux/reducers/index.js","redux/actions/index.js","AddItem.js","containers/AddItem.js","Cashier.js","containers/Cashier.js","Cart.js","containers/Cart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","items","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","id","name","price","map","item","cart","quantity","combineReducers","nextItemId","AddItem","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nameChange","bind","assertThisInitialized","priceChange","handleSubmit","add","event","setState","target","value","preventDefault","listItems","react_default","a","createElement","scope","className","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","onSubmit","onChange","placeholder","Component","connect","dispatch","addItem","remove","removeItem","Cashier","quantityChange","handleSuggestion","itemsMatch","innerHTML","buy","_this2","href","onClick","aria-haspopup","aria-expanded","filter","indexOf","getItemsMatch","buyItem","Cart","discount","subtotal","total","payment","change","discountChange","paymentChange","handleChange","totalPrice","Number","getItem","onKeyUp","find","itemFindById","App","containers_AddItem","containers_Cart","containers_Cashier","Boolean","window","location","hostname","match","store","createStore","rootReducers","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6JC+BzBC,EAvBD,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClC,OAAQC,EAAOC,MAEX,IAAK,WACD,OAAOC,OAAAC,EAAA,EAAAD,CACAN,GADPQ,OAAA,CAEI,CACIC,GAAIL,EAAOK,GACXC,KAAMN,EAAOM,KACbC,MAAOP,EAAOO,SAI1B,IAAK,cACD,OAAOX,EAAMY,IAAI,SAAAC,GAAI,OAEhBA,EAAKJ,KAAOL,EAAOK,GAAM,GAAKI,IAEvC,QACI,OAAOb,ICHJc,EAhBF,WAAwB,IAAvBd,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjC,OAAQC,EAAOC,MAEX,IAAK,WACD,OAAOC,OAAAC,EAAA,EAAAD,CACAN,GADPQ,OAAA,CAEI,CACIC,GAAIL,EAAOK,GACXM,SAAUX,EAAOW,YAG7B,QACI,OAAOf,ICVJgB,cAAgB,CAACjB,QAAOe,4CCFnCG,eAAa,UCkFFC,cAvFX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAAJ,IACfE,EAAAd,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAY,GAAAO,KAAAH,KAAMH,KACDnB,MAAQ,CAACU,KAAM,GAAIC,MAAO,IAE/BS,EAAKM,WAAaN,EAAKM,WAAWC,KAAhBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KAClBA,EAAKS,YAAcT,EAAKS,YAAYF,KAAjBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KAEnBA,EAAKU,aAAeV,EAAKU,aAAaH,KAAlBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KAEpBA,EAAKD,MAAMY,IAAI,UAAW,MAC1BX,EAAKD,MAAMY,IAAI,UAAW,KAC1BX,EAAKD,MAAMY,IAAI,gBAAiB,MAChCX,EAAKD,MAAMY,IAAI,aAAc,KAZdX,0EAeRY,GACPV,KAAKW,SAAS,CAACvB,KAAMsB,EAAME,OAAOC,4CAG1BH,GACRV,KAAKW,SAAS,CAACtB,MAAOqB,EAAME,OAAOC,6CAG1BH,GACTV,KAAKH,MAAMY,IAAIT,KAAKtB,MAAMU,KAAMY,KAAKtB,MAAMW,OAC3CqB,EAAMI,kDAIN,IACIC,EADQf,KAAKH,MAAMpB,MACDa,IAAI,SAACC,GAAD,OACtByB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAO5B,EAAKJ,IACtB6B,EAAAC,EAAAC,cAAA,UAAK3B,EAAKH,MACV4B,EAAAC,EAAAC,cAAA,UAAK3B,EAAKF,UAIlB,OACI2B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBC,cAAY,QAAQC,cAAY,iBAApE,aAIAN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAajC,GAAG,eAAeoC,SAAS,KAAKC,KAAK,SAC5DC,kBAAgB,oBAAoBC,cAAY,QACjDV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeI,KAAK,YAC/BR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcjC,GAAG,qBAA/B,aACA6B,EAAAC,EAAAC,cAAA,UAAQnC,KAAK,SAASqC,UAAU,QAAQO,eAAa,QAAQC,aAAW,SACpEZ,EAAAC,EAAAC,cAAA,QAAMQ,cAAY,QAAlB,UAGRV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,KACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,QACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,WAGRH,EAAAC,EAAAC,cAAA,aACKH,KAIbC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,QAAMW,SAAU7B,KAAKQ,cACjBQ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,eAAerC,KAAK,OAAO8B,MAAOb,KAAKtB,MAAMU,KAAM0C,SAAU9B,KAAKI,WAAY2B,YAAY,+BAE/Gf,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,eAAerC,KAAK,OAAO8B,MAAOb,KAAKtB,MAAMW,MAAOyC,SAAU9B,KAAKO,YAAawB,YAAY,gCAEjHf,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kBAAkBrC,KAAK,SAAS8B,MAAM,6BA7ErEmB,aCYPC,cATS,SAAAvD,GAAK,MAAK,CAC9BD,MAAOC,EAAMD,QAGU,SAAAyD,GAAQ,MAAK,CACpCzB,IAAK,SAACrB,EAAMC,GAAP,OAAiB6C,EFCH,SAAC9C,EAAMC,GAAP,MAAkB,CACrCN,KAAM,WACNI,GAAIQ,IACJP,OACAC,SEL+B8C,CAAQ/C,EAAMC,KAC7C+C,OAAQ,SAAAjD,GAAE,OAAI+C,EFQQ,SAAA/C,GAAE,MAAK,CAC9BJ,KAAM,cACNI,MEVwBkD,CAAWlD,OAGvB8C,CAGbrC,GCsCa0C,cApDX,SAAAA,EAAYzC,GAAO,IAAAC,EAAA,OAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAAsC,IACfxC,EAAAd,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAsD,GAAAnC,KAAAH,KAAMH,KACDnB,MAAQ,CAACS,GAAI,GAAIC,KAAM,GAAIK,SAAU,IAE1CK,EAAKM,WAAaN,EAAKM,WAAWC,KAAhBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KAClBA,EAAKyC,eAAiBzC,EAAKyC,eAAelC,KAApBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KAEtBA,EAAK0C,iBAAmB1C,EAAK0C,iBAAiBnC,KAAtBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KACxBA,EAAKU,aAAeV,EAAKU,aAAaH,KAAlBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KARLA,0EAWRY,GACP,IAAIvB,EAAKa,KAAKH,MAAM4C,WAAW/B,EAAME,OAAOC,OAAO,GAAG1B,GACtDa,KAAKW,SAAS,CAACxB,GAAIA,EAAIC,KAAMsB,EAAME,OAAOC,+CAG/BH,GACXV,KAAKW,SAAS,CAAClB,SAAUiB,EAAME,OAAOC,iDAGzBH,GACb,IAAIvB,EAAKa,KAAKH,MAAM4C,WAAW/B,EAAME,OAAO8B,WAAW,GAAGvD,GAC1Da,KAAKW,SAAS,CAACxB,GAAIA,EAAIC,KAAMsB,EAAME,OAAO8B,iDAGjChC,GACTV,KAAKH,MAAM8C,IAAI3C,KAAKtB,MAAMS,GAAIa,KAAKtB,MAAMe,UACzCiB,EAAMI,kDAGD,IAAA8B,EAAA5C,KAEDe,EADQf,KAAKH,MAAM4C,WAAWzC,KAAKtB,MAAMU,MACvBE,IAAI,SAACC,GAAD,OACtByB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgByB,KAAK,IAAIC,QAASF,EAAKJ,kBAAmBjD,EAAKH,QAGhF,OACI4B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,QAAMW,SAAU7B,KAAKQ,cACjBQ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,qCAAqCC,cAAY,WAC3D0B,gBAAc,OAAOC,gBAAc,QAAQlB,SAAU9B,KAAKI,WAAYS,MAAOb,KAAKtB,MAAMU,KAAM2C,YAAY,uBACjHf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACVL,GAELC,EAAAC,EAAAC,cAAA,SAAOE,UAAU,0BAA0BU,SAAU9B,KAAKuC,eAAgB1B,MAAOb,KAAKtB,MAAMe,SAAUsC,YAAY,2BAClHf,EAAAC,EAAAC,cAAA,UAAQnC,KAAK,SAASqC,UAAU,wBAAhC,wBA9CEY,aCcPC,cATS,SAAAvD,GAAK,MAAK,CAC9Bc,KAAMd,EAAMc,KACZiD,WAAY,SAACrD,GAAD,OALM,SAACX,EAAOW,GAAR,OAAiBX,EAAMwE,OAAO,SAAA1D,GAAI,OAAiC,IAA7BA,EAAKH,KAAK8D,QAAQ9D,KAKpD+D,CAAczE,EAAMD,MAAOW,MAG1B,SAAA8C,GAAQ,MAAK,CACpCS,IAAK,SAACxD,EAAIM,GAAL,OAAkByC,EJWJ,SAAC/C,EAAIM,GAAL,MAAmB,CACtCV,KAAM,WACNI,KACAM,YIdgC2D,CAAQjE,EAAIM,OAGjCwC,CAGbK,GCiGae,cAjHX,SAAAA,EAAYxD,GAAO,IAAAC,EAAA,OAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAAqD,IACfvD,EAAAd,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAqE,GAAAlD,KAAAH,KAAMH,KACDnB,MAAQ,CAAC4E,SAAU,EAAGC,SAAU,EAAGC,MAAO,EAAGC,QAAS,EAAGC,OAAQ,GAEtE5D,EAAK6D,eAAiB7D,EAAK6D,eAAetD,KAApBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KACtBA,EAAK8D,cAAgB9D,EAAK8D,cAAcvD,KAAnBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KAErBA,EAAKU,aAAeV,EAAKU,aAAaH,KAAlBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KACpBA,EAAK+D,aAAe/D,EAAK+D,aAAaxD,KAAlBrB,OAAAsB,EAAA,EAAAtB,QAAAsB,EAAA,EAAAtB,CAAAc,KARLA,8EAWJY,GACXV,KAAKW,SAAS,CAAC2C,SAAU5C,EAAME,OAAOC,8CAG5BH,GACVV,KAAKW,SAAS,CAAC8C,QAAS/C,EAAME,OAAOC,6CAG5BH,GACNV,KAAKtB,MAAM+E,QAAUzD,KAAKtB,MAAM8E,MAC/BxD,KAAKW,SAAS,CAAC+C,OAAS1D,KAAKtB,MAAM+E,QAAUzD,KAAKtB,MAAM8E,QAGxDxD,KAAKW,SAAS,CAAC+C,OAAQ,qBAE3BhD,EAAMI,sDAGGJ,GACTV,KAAKW,SAAS,CAAC6C,MAAQxD,KAAKtB,MAAM6E,UAAY,IAAMvD,KAAKtB,MAAM4E,UAAU,MACzE5C,EAAMI,kDAGD,IAAA8B,EAAA5C,KACDvB,EAAQuB,KAAKH,MAAML,KACnBsE,EAAa,EACb/C,EAAYtC,EAAMa,IAAI,SAACC,GACvB,IAAIE,EAAWsE,OAAOxE,EAAKE,UAG3B,OAFAF,EAAOqD,EAAK/C,MAAMmE,QAAQzE,EAAKJ,IAC/B2E,GAAeC,OAAOxE,EAAKF,OAASI,EAEhCuB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACK3B,EAAKH,MAEV4B,EAAAC,EAAAC,cAAA,UACK3B,EAAKF,OAEV2B,EAAAC,EAAAC,cAAA,UACKzB,GAELuB,EAAAC,EAAAC,cAAA,UACK6C,OAAOxE,EAAKF,OAASI,MAMtC,OADAO,KAAKtB,MAAM6E,SAAWO,EAElB9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACKH,GAELC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAK4C,IAET9C,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,QAAMW,SAAU7B,KAAKQ,cACjBQ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,eAAe6C,QAASjE,KAAKQ,aAAcsB,SAAU9B,KAAK2D,eAAgB9C,MAAOb,KAAKtB,MAAM4E,cAIzHtC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UACKlB,KAAKtB,MAAM8E,QAGpBxC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,QAAMW,SAAU7B,KAAK6D,cACjB7C,EAAAC,EAAAC,cAAA,SAAOE,UAAU,eAAe6C,QAASjE,KAAK6D,aAAc/B,SAAU9B,KAAK4D,cAAe/C,MAAOb,KAAKtB,MAAM+E,aAIxHzC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UACKlB,KAAKtB,MAAMgF,mBAxGzB1B,aCWJC,cARS,SAAAvD,GAAK,MAAK,CAC9Bc,KAAMd,EAAMc,KACZwE,QAAS,SAAC7E,GAAD,OAJQ,SAACV,EAAOU,GAAR,OAAeV,EAAMyF,KAAK,SAAA3E,GAAI,OAAIA,EAAKJ,KAAOA,IAI9CgF,CAAazF,EAAMD,MAAOU,MAGpB,SAAA+C,GAAQ,MAAK,IAGzBD,CAGboB,GCeae,mLAtBX,OACIpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAIXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mDACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAACmD,EAAD,OAEJrD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAACoD,EAAD,OAEJtD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAACqD,EAAD,gBAfFvC,aCKEwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNN,IAAMC,EAAQC,YAAYC,GAE1BC,IAASC,OACLjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAUL,MAAOA,GACb7D,EAAAC,EAAAC,cAACiE,EAAD,OAEJC,SAASC,eAAe,SD2GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b5c38cf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/40621.20a3b2a9.jpg\";","/*\n *\n *  This file serves as reducers definition for the app.\n *  Please do not clutter reducers with action definition.\n *\n */\n\n// This arrow function describe what each action done to item will do.\nconst items = (state = [], action) => {\n    switch (action.type) {\n        // When ADD_ITEM is performed, we add a new item to the store.\n        case 'ADD_ITEM':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    name: action.name,\n                    price: action.price,\n                }\n            ];\n        //  When REMOVE_ITEM is performed, we remove an item from the store.\n        case 'REMOVE_ITEM':\n            return state.map(item =>\n                // For an item which id match, we replace the item with an empty array(remove).\n                (item.id === action.id) ? {} : item\n            );\n        default:\n            return state;\n    }\n};\n\nexport default items;","/*\n *\n *  This file serves as reducers definition for the app.\n *  Please do not clutter reducers with action definition.\n *\n */\n\n// This arrow function describe what each action done to item will do.\nconst cart = (state = [], action) => {\n    switch (action.type) {\n        // When BUY_ITEM is performed, we add a new item to the store.\n        case 'BUY_ITEM':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    quantity: action.quantity,\n                }\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default cart;","import { combineReducers } from 'redux';\nimport items from './items';\nimport cart from './cart';\n\n/*\n *\n *  This file combine all reducers that exist into one file.\n *\n */\n\nexport default combineReducers({items, cart});","/*\n *\n *  This file serves as the action creators for the app.\n *  Please do not clutter action creator with state mutation.\n *\n */\n\n// This id will uniquely identify each item in the store.\nlet nextItemId = 1;\n\n// This arrow function will define action to add item to the store.\nexport const addItem = (name, price) => ({\n    type: 'ADD_ITEM',\n    id: nextItemId++,\n    name,\n    price,\n});\n\n// This arrow function will define action to remove item from the store.\nexport const removeItem = id => ({\n   type: 'REMOVE_ITEM',\n   id,\n});\n\nexport const buyItem = (id, quantity) => ({\n    type: 'BUY_ITEM',\n    id,\n    quantity,\n});","import React, { Component } from 'react';\n\nclass AddItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {name: '', price: ''};\n\n        this.nameChange = this.nameChange.bind(this);\n        this.priceChange = this.priceChange.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.props.add('Indomie', 2500);\n        this.props.add('Sarimie', 3000);\n        this.props.add('Indomie Jumbo', 3500);\n        this.props.add('Extra Joss', 3000);\n    }\n\n    nameChange(event) {\n        this.setState({name: event.target.value});\n    }\n\n    priceChange(event) {\n        this.setState({price: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.add(this.state.name, this.state.price);\n        event.preventDefault();\n    }\n\n    render() {\n        var items = this.props.items;\n        var listItems = items.map((item) =>\n            <tr>\n                <th scope=\"row\">{item.id}</th>\n                <td>{item.name}</td>\n                <td>{item.price}</td>\n            </tr>\n        );\n\n        return (\n            <div>\n                <button className=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                    Menu List\n                </button>\n\n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\"\n                     aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Menu List</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">Price</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {listItems}\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <form onSubmit={this.handleSubmit}>\n                                    <label>\n                                        <input className=\"form-control\" type=\"text\" value={this.state.name} onChange={this.nameChange} placeholder=\"Please enter item name...\"/>\n                                    </label>\n                                    <label>\n                                        <input className=\"form-control\" type=\"text\" value={this.state.price} onChange={this.priceChange} placeholder=\"Please enter item price...\"/>\n                                    </label>\n                                    <input className=\"btn btn-success\" type=\"submit\" value=\"Add to menu\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddItem;","import { connect } from 'react-redux';\nimport { addItem, removeItem } from \"../redux/actions\";\nimport AddItem from '../AddItem';\n\n\nconst mapStateToProps = state => ({\n    items: state.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    add: (name, price) => dispatch(addItem(name, price)),\n    remove: id => dispatch(removeItem(id)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddItem);","import React, { Component } from 'react';\n\nclass Cashier extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {id: '', name: '', quantity: ''};\n\n        this.nameChange = this.nameChange.bind(this);\n        this.quantityChange = this.quantityChange.bind(this);\n\n        this.handleSuggestion = this.handleSuggestion.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    nameChange(event) {\n        var id = this.props.itemsMatch(event.target.value)[0].id;\n        this.setState({id: id, name: event.target.value});\n    }\n\n    quantityChange(event) {\n        this.setState({quantity: event.target.value});\n    }\n\n    handleSuggestion(event) {\n        var id = this.props.itemsMatch(event.target.innerHTML)[0].id;\n        this.setState({id: id, name: event.target.innerHTML});\n    }\n\n    handleSubmit(event) {\n        this.props.buy(this.state.id, this.state.quantity);\n        event.preventDefault();\n    }\n\n    render() {\n        var items = this.props.itemsMatch(this.state.name);\n        var listItems = items.map((item) =>\n            <a className=\"dropdown-item\" href=\"#\" onClick={this.handleSuggestion}>{item.name}</a>\n        );\n\n        return (\n            <div className=\"w-100\">\n                <form onSubmit={this.handleSubmit}>\n                    <input className=\"form-control dropdown-toggle w-100\" data-toggle=\"dropdown\"\n                           aria-haspopup=\"true\" aria-expanded=\"false\" onChange={this.nameChange} value={this.state.name} placeholder=\"Enter item name...\"/>\n                    <div className=\"dropdown-menu w-100\">\n                        {listItems}\n                    </div>\n                    <input className=\"form-control w-100 mt-2\" onChange={this.quantityChange} value={this.state.quantity} placeholder=\"Enter item quantity...\"/>\n                    <button type=\"submit\" className=\"btn btn-success mt-2\">Add to Cart</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Cashier;","import { connect } from 'react-redux';\nimport { buyItem } from \"../redux/actions\";\nimport Cashier from '../Cashier';\n\nconst getItemsMatch = (items, name) => items.filter(item => item.name.indexOf(name) !== -1);\nconst getItemById = (items, name) => items.find(item => item.name === name);\n\nconst mapStateToProps = state => ({\n    cart: state.cart,\n    itemsMatch: (name) => getItemsMatch(state.items, name),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    buy: (id, quantity) => dispatch(buyItem(id, quantity)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Cashier);","import React, { Component } from 'react';\n\nclass Cart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {discount: 0, subtotal: 0, total: 0, payment: 0, change: 0};\n\n        this.discountChange = this.discountChange.bind(this);\n        this.paymentChange = this.paymentChange.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    discountChange(event) {\n        this.setState({discount: event.target.value});\n    }\n\n    paymentChange(event) {\n        this.setState({payment: event.target.value});\n    }\n\n    handleChange(event) {\n        if(this.state.payment > this.state.total) {\n            this.setState({change: (this.state.payment - this.state.total)});\n        }\n        else {\n            this.setState({change: 'Not enough money'})\n        }\n        event.preventDefault();\n    }\n\n    handleSubmit(event) {\n        this.setState({total: (this.state.subtotal * (100 - this.state.discount)/100)});\n        event.preventDefault();\n    }\n\n    render() {\n        var items = this.props.cart;\n        var totalPrice = 0;\n        var listItems = items.map((item) => {\n            var quantity = Number(item.quantity);\n            item = this.props.getItem(item.id);\n            totalPrice += (Number(item.price) * quantity);\n            return (\n                <tr>\n                    <td>\n                        {item.name}\n                    </td>\n                    <td>\n                        {item.price}\n                    </td>\n                    <td>\n                        {quantity}\n                    </td>\n                    <td>\n                        {Number(item.price) * quantity}\n                    </td>\n                </tr>\n            );\n        });\n        this.state.subtotal = totalPrice;\n        return (\n            <div>\n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <td>Item Name</td>\n                            <td>Price per Unit</td>\n                            <td>Quantity</td>\n                            <td>Total Price</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {listItems}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td>Sub Total: </td>\n                            <td>{totalPrice}</td>\n                        </tr>\n                        <tr>\n                            <td>Discount</td>\n                            <td>\n                                <form onSubmit={this.handleSubmit}>\n                                    <input className=\"form-control\" onKeyUp={this.handleSubmit} onChange={this.discountChange} value={this.state.discount}/>\n                                </form>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Total</td>\n                            <td>\n                                {this.state.total}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Payment</td>\n                            <td>\n                                <form onSubmit={this.handleChange}>\n                                    <input className=\"form-control\" onKeyUp={this.handleChange} onChange={this.paymentChange} value={this.state.payment}/>\n                                </form>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Change</td>\n                            <td>\n                                {this.state.change}\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Cart;","import { connect } from 'react-redux';\nimport Cart from '../Cart';\n\nconst itemFindById = (items, id) => items.find(item => item.id === id);\n\nconst mapStateToProps = state => ({\n    cart: state.cart,\n    getItem: (id) => itemFindById(state.items, id),\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Cart);","import React, { Component } from 'react';\nimport './App.css';\nimport logo from './40621.jpg';\nimport AddItem from \"./containers/AddItem\";\nimport Cashier from \"./containers/Cashier\";\nimport Cart from \"./containers/Cart\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"container w-100 mt-5\">\n            {/*<div className=\"row w-100 align-content-center justify-content-center\">*/}\n                {/*<img src={logo} width=\"400vw\" height=\"400vw\"/>*/}\n            {/*</div>*/}\n            <div className=\"row align-content-center justify-content-center\">\n                <div className=\"col\">\n                    <AddItem/>\n                </div>\n                <div className=\"col\">\n                    <Cart/>\n                </div>\n                <div className=\"col\">\n                    <Cashier/>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducers from './redux/reducers/index';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}